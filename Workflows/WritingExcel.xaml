<Activity mc:Ignorable="sap sap2010" x:Class="WritingExcel" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="996,3340" sap2010:WorkflowViewState.IdRef="WritingExcel_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="68">
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="64">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Diagnostics.Process</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="WritingExcel" sap:VirtualizedContainerService.HintSize="774,3275" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_teste" />
      <Variable x:TypeArguments="x:Int32" Name="indexRow" />
      <Variable x:TypeArguments="x:Int32" Name="indexCol" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_planilhaLida" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Base" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_Processamento" />
      <Variable x:TypeArguments="x:String" Name="planilha" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="732,300" sap2010:WorkflowViewState.IdRef="CommentOut_4">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="376,221" sap2010:WorkflowViewState.IdRef="Sequence_13">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:KillProcess AppliesTo="{x:Null}" ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="Kill Process" sap:VirtualizedContainerService.HintSize="334,133" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="excel" />
        </Sequence>
      </ui:CommentOut.Body>
    </ui:CommentOut>
    <ui:BuildDataTable DataTable="[dt_teste]" DisplayName="Build Data Table" sap:VirtualizedContainerService.HintSize="732,60" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;Id&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Nome&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Idade&quot; msdata:Caption=&quot;&quot; type=&quot;xs:int&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;Status&quot; msdata:Caption=&quot;&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Id&gt;1&lt;/Id&gt;&#xA;    &lt;Nome&gt;Rodolfo Londero&lt;/Nome&gt;&#xA;    &lt;Idade&gt;30&lt;/Idade&gt;&#xA;    &lt;Status&gt;A&lt;/Status&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Id&gt;2&lt;/Id&gt;&#xA;    &lt;Nome&gt;Guilherme&lt;/Nome&gt;&#xA;    &lt;Idade&gt;34&lt;/Idade&gt;&#xA;    &lt;Status&gt;B&lt;/Status&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;Id&gt;3&lt;/Id&gt;&#xA;    &lt;Nome&gt;Queila&lt;/Nome&gt;&#xA;    &lt;Idade&gt;27&lt;/Idade&gt;&#xA;    &lt;Status&gt;C&lt;/Status&gt;&#xA;  &lt;/TableName&gt;&#xA;&lt;/NewDataSet&gt;" />
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="732,2747" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[{&quot;Processamento&quot;}]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="698,2561" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="656,82" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[planilha]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[item]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:CopyFile ContinueOnError="{x:Null}" Destination="[String.Format(&quot;Data\{0}.xlsx&quot;, planilha)]" DisplayName="Copy File" sap:VirtualizedContainerService.HintSize="656,154" sap2010:WorkflowViewState.IdRef="CopyFile_1" Overwrite="True" Path="[String.Format(&quot;Data\Modelo_{0}.xlsx&quot;, planilha)]" />
            <ui:ReadRange AddHeaders="True" DataTable="[dt_Base]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="656,88" sap2010:WorkflowViewState.IdRef="ReadRange_2" SheetName="Pedidos" WorkbookPath="Data\Base.xlsx">
              <ui:ReadRange.Range>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ReadRange.Range>
            </ui:ReadRange>
            <ui:ReadRange AddHeaders="True" DataTable="[dt_Processamento]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="656,88" sap2010:WorkflowViewState.IdRef="ReadRange_1" SheetName="Pedidos" WorkbookPath="[String.Format(&quot;Data\Modelo_{0}.xlsx&quot;, planilha)]">
              <ui:ReadRange.Range>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ReadRange.Range>
            </ui:ReadRange>
            <ui:MergeDataTable Destination="[dt_Processamento]" DisplayName="Merge Data Table" sap:VirtualizedContainerService.HintSize="656,133" sap2010:WorkflowViewState.IdRef="MergeDataTable_2" MissingSchemaAction="Ignore" Source="[dt_Base]" />
            <Assign sap:VirtualizedContainerService.HintSize="656,82" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Object">[dt_Processamento(0)("Status Pedido")]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Object">["Teste de status com texto maior que X caractereslka jslaks djlksajd alkjd aksljdaks ldjask djjaksjld askljas"]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dt_Processamento]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="656,116" sap2010:WorkflowViewState.IdRef="WriteRange_2" SheetName="Pedidos" WorkbookPath="[String.Format(&quot;Data\{0}.xlsx&quot;, planilha)]" />
            <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="656,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Formatando&quot;]" />
            <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="656,1113" sap2010:WorkflowViewState.IdRef="CommentOut_5">
              <ui:CommentOut.Body>
                <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="620,1034" sap2010:WorkflowViewState.IdRef="Sequence_14">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ueab:ExcelProcessScopeX LaunchTimeout="{x:Null}" DisplayAlerts="False" DisplayName="Excel Process Scope" ExistingProcessAction="None" FileConflictResolution="CloseWithoutSaving" sap:VirtualizedContainerService.HintSize="578,946" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1" LaunchMethod="Automation" MacroSettings="DisableAll" ProcessMode="AlwaysCreateNew" ShowExcelWindow="False">
                    <ueab:ExcelProcessScopeX.Body>
                      <ActivityAction x:TypeArguments="ui:IExcelProcess">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                        </ActivityAction.Argument>
                        <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" CreateNewFile="False" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="544,859" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="[String.Format(&quot;Data\{0}.xlsx&quot;, planilha)]">
                          <ueab:ExcelApplicationCard.Body>
                            <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                              </ActivityAction.Argument>
                              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="510,590" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="new_table" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each - Delete Specified Columns" sap:VirtualizedContainerService.HintSize="468,346" sap2010:WorkflowViewState.IdRef="ForEach`1_15" Values="[{&quot;Prazo Pgto&quot;, &quot;Incoterms&quot;, &quot;Nro Prod Cliente&quot;, &quot;Screenshot&quot;, &quot;Total&quot;}]">
                                  <ui:ForEach.Body>
                                    <ActivityAction x:TypeArguments="x:String">
                                      <ActivityAction.Argument>
                                        <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                                      </ActivityAction.Argument>
                                      <ueab:DeleteColumnX ColumnName="[item]" DisplayName="Delete Column" HasHeaders="True" sap:VirtualizedContainerService.HintSize="434,160" sap2010:WorkflowViewState.IdRef="DeleteColumnX_2" Range="[Excel.Sheet(&quot;Pedidos&quot;)]" />
                                    </ActivityAction>
                                  </ui:ForEach.Body>
                                </ui:ForEach>
                                <ueab:AutoFitX Columns="True" DisplayName="Autofit Range" sap:VirtualizedContainerService.HintSize="468,116" sap2010:WorkflowViewState.IdRef="AutoFitX_1" Range="[Excel.Sheet(&quot;Pedidos&quot;)]" Rows="True" />
                              </Sequence>
                            </ActivityAction>
                          </ueab:ExcelApplicationCard.Body>
                        </ueab:ExcelApplicationCard>
                      </ActivityAction>
                    </ueab:ExcelProcessScopeX.Body>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ueab:ExcelProcessScopeX>
                </Sequence>
              </ui:CommentOut.Body>
            </ui:CommentOut>
            <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim Excel As Microsoft.Office.Interop.Excel.Application&#xA;Dim Workbook As Microsoft.Office.Interop.Excel.Workbook&#xA;Dim Worksheet As Microsoft.Office.Interop.Excel.Worksheet&#xA;Dim n_columns As Integer&#xA;&#xA;Excel = New Microsoft.Office.Interop.Excel.Application&#xA;Excel.Visible&#x9;= False&#xA;&#xA;Workbook = Excel.Workbooks.Open(Path)&#xA;&#xA;Worksheet = CType(Workbook.Sheets(sheet), Microsoft.Office.Interop.Excel.Worksheet)&#xA;&#xA;Worksheet.Cells.WrapText = False&#xA;Worksheet.Cells.EntireColumn.AutoFit&#xA;Worksheet.Cells.EntireRow.AutoFit&#xA;&#xA;Workbook.Save()&#xA;Workbook.Close()&#xA;Excel.Quit()" DisplayName="Invoke code - Apply Word Wrap" sap:VirtualizedContainerService.HintSize="656,165" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
              <ui:InvokeCode.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="path">[Path.GetFullPath(String.Format("Data\{0}.xlsx", planilha))]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="sheet">Pedidos</InArgument>
              </ui:InvokeCode.Arguments>
            </ui:InvokeCode>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>